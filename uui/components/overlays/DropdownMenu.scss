@use 'sass:math';
@use '../../assets/styles/index' as *;

@mixin icon-sizes($size, $font-size, $line-height) {
    $vpadding: math.div(($line-height - $size), 2);

    :global(.uui-checkbox) {
        width: $size;
        height: $size;
        margin: $vpadding 0;
    }

    :global(.uui-input-label) {
        font-size: $font-size;
        line-height: $line-height;
    }

    :global(.uui-icon) {
        svg {
            width: $size;
        }
    }
}

@mixin fillColor($fill, $color: null) {
    @if ($color) {
        color: $color;
        fill: $fill;
    } @else {
        color: $fill;
        fill: $fill;
    }
}

@mixin withSelected {
    &:global(.uui-selected) {
        @include fillColor(var(--primary-color));

        &:hover, &:focus {
            @include fillColor(var(--primary-color)!important);
        }

        .iconCheck {
            @include fillColor(var(--primary-color));
        }
    }
}

@mixin itemRoot {
    padding: 0.5em 1em;
    line-height: 1.5;
    box-sizing: border-box;
    width: 100%;

    &:focus {
        outline: none;
    }
}

.menuRoot {
    padding: 0;
    margin: 0;

    &:focus {
        outline: none;
    }
}

.bodyRoot {
    @include icon-layout(36px);
    @include fillColor(var(--icon-color), var(--text-primary-color));
    font-family: var(--font-regular);
    font-size: 14px;
    padding: 0.5em 0;
    background-color: var(--surface-color);
    box-shadow: var(--shadow);
}

.submenuRootItem {
    .iconAfter {
        transform: rotate(-90deg);
    }
}

.iconCheck {
    @include fillColor(transparent);
}

.splitterRoot {
    display: flex;
    width: 100%;

    .splitter {
        width: 100%;
        border: 0;
        border-top: 1px solid var(--divider-color);
        height: 0;
    }
}

.headerRoot {
    @include fillColor(var(--text-secondary-color));
    @include itemRoot;
    cursor: default;
    font-size: 0.9em;
}

.itemRoot {
    @include icon-layout(36px);
    @include withSelected;
    @include itemRoot;

    .icon {
        justify-content: flex-start;
    }

    &.link {
        @include withSelected;
        @include fillColor(var(--icon-color), var(--text-primary-color));
        display: flex;
        align-items: center;

        &:focus {
            outline: none;
        }
    }

    &:global(.-clickable:not(.uui-disabled)) {
        &:hover, &:focus {
            background-color: var(--surface-hover-color);
            fill: var(--icon-active-color);
            cursor: pointer;
        }
    }

    &:global(.uui-disabled) {
        @include fillColor(var(--disabled-color));

        &:hover, &:focus {
            background-color: transparent;
            cursor: default;
        }
    }

    & > *:not(:last-child) {
        margin: 0 0.5em 0 0;
    }
}
